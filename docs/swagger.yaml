basePath: /
definitions:
  gorm.DeletedAt:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  main.Orange:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      farm_id:
        type: integer
      harvestDate:
        type: string
      id:
        type: integer
      plantDate:
        type: string
      quantity:
        type: integer
      updatedAt:
        type: string
      varietyId:
        type: integer
    type: object
  main.User:
    properties:
      createdAt:
        type: string
      deletedAt:
        $ref: '#/definitions/gorm.DeletedAt'
      email:
        type: string
      id:
        type: integer
      password:
        type: string
      role:
        type: string
      updatedAt:
        type: string
    required:
    - email
    - password
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a simple API for managing orange farms
  title: Orange Farm Fiber API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Login with email and password to get JWT token
      parameters:
      - description: User credentials
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/main.User'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Login for authentication
      tags:
      - user
  /orange:
    get:
      consumes:
      - application/json
      description: Get details of all oranges
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.Orange'
            type: array
      security:
      - ApiKeyAuth: []
      summary: Get all Oranges
      tags:
      - books
  /register:
    post:
      consumes:
      - application/json
      description: Create a new user with email and password
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/main.User'
            type: array
      security: []
      summary: Create a new user
      tags:
      - user
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
